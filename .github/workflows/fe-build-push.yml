name: Frontend Build and Push

on:
  push:
    branches: [main, develop]
    paths: ['frontend/**']
  pull_request:
    branches: [main]
    paths: ['frontend/**']
  workflow_dispatch:

env:
  DOCKER_REPO: docker.io/youkim7/frontend
  WORKING_DIRECTORY: ./frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ${{ env.WORKING_DIRECTORY }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm ci

      - name: Run tests
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run test:ci

      - name: Run lint
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: npm run lint

      - name: Build application
        working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # فعل هذا السر لو تستخدم Vite وتبغى تبني بعنوان الـ API
          VITE_API_BASE_URL: ${{ secrets.FE_API_BASE_URL }}
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate image tags
        id: meta
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "tags=${{ env.DOCKER_REPO }}:latest,${{ env.DOCKER_REPO }}:${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "primary=${{ env.DOCKER_REPO }}:latest" >> $GITHUB_OUTPUT
          else
            echo "tags=${{ env.DOCKER_REPO }}:${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "primary=${{ env.DOCKER_REPO }}:${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.WORKING_DIRECTORY }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Azure CLI login (Service Principal)
        if: github.ref == 'refs/heads/main'
        uses: azure/CLI@v1
        with:
          azcliversion: 2.53.0
          inlineScript: |
            az login --service-principal \
              -u "${{ secrets.AZURE_CLIENT_ID }}" \
              -p "${{ secrets.AZURE_CLIENT_SECRET }}" \
              --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Update Container App (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          az containerapp update \
            --name ca-frontend \
            --resource-group rg-burgerbuilder-prod \
            --image "${{ steps.meta.outputs.primary }}"
